#!/bin/sh
WFHOME=`pwd`
# Customizable part
JVMTYPE=sun
#JVMTYPE=ibm
#JVM_KIND=hotspot
#JVM_KIND=classic
JVM_KIND=client
XTXMMIX=1
# End of customizable part

case "`uname -m`" in  \
                i[3-6]86) \
                    ARCH=i386 \
                    ;; \
                i86pc) \
                    ARCH=i386 \
                    ;; \
                sparc*)  \
                    ARCH=sparc \
                    ;; \
                sun4u) \
                    ARCH=sparc \
                    ;; \
                *) \
                    ARCH=uname -m  \
                    ;; \
        esac
# workaround for bug/feature in JDK - it resolving libjvm.so using 
# dlopen("libjvm.so") - doesn't work if libjvm.so isn't in LD_LIBRARY_PATH
  case $JVMTYPE in 
            sun) 
              LD_LIBRARY_PATH=${WFJDKHOME}/jre/lib/${ARCH}/${JVM_KIND}:${WFJDKHOME}/jre/lib/${ARCH}:${LD_LIBRARY_PATH} 
              ;; 
            ibm) 
              LD_LIBRARY_PATH=${WFJDKHOME}/jre/bin/${JVM_KIND}:${WFJDKHOME}/jre/bin:${LD_LIBRARY_PATH} 
              ;; 
  esac   
if [ $XTXMMIX -eq 1 ]; then
# workaround for mixing of libXt.so and libXm.so in one application, if first
# loaded is libXt.so - as with Mozilla.
LD_PRELOAD=${WFHOME}/Helper.libXm.so.4
fi

export WFHOME LD_LIBRARY_PATH LD_PRELOAD
