DEPTH = ..\..

TARGETS = hashtable.exe hashtest.exe smtest.exe msgctest.exe maltest.exe divtest.exe

include <$(DEPTH)/config/rules.mak>

LIBS = ef.lib                \
       $(DEPTH)\dist\WIN32_D.OBJ\lib\sm3240.lib                \
       $(DEPTH)\dist\WIN32_D.OBJ\lib\libnspr21.lib             \
       $(DEPTH)\dist\WIN32_D.OBJ\lib\libplds21.lib             \
       $(DEPTH)\dist\WIN32_D.OBJ\lib\libmsgc21.lib             \

CFLAGS = $(CFLAGS) -DSM_DUMP -I$(PUBLIC)\sm -I$(PUBLIC)\nspr20 $(OS_LIBS) $(LIBS)
CPPFLAGS = $(CFLAGS) -DSM_DUMP -I$(PUBLIC)\sm -I$(PUBLIC)\nspr20 $(OS_LIBS) -I..\eflib\ $(LIBS)

!ifndef MOZ_PROF        # assume we use a write barrier when profiling
CFLAGS =   $(CFLAGS)   -DSM_NO_WRITE_BARRIER -DSM_CHECK_PTRS -DSM_DEBUG_HEADER
CPPFLAGS = $(CPPFLAGS) -DSM_NO_WRITE_BARRIER -DSM_CHECK_PTRS -DSM_DEBUG_HEADER
!endif

import:
        echo cp $(DIST)\bin\sm3240.dll $(DIST)\bin\libnspr21.dll $(DIST)\bin\libplds21.dll $(DIST)\bin\libmsgc21.dll ..\eflib\win32_o.obj\ef.lib .
        cp $(DIST)\bin\sm3240.dll $(DIST)\bin\libnspr21.dll $(DIST)\bin\libplds21.dll $(DIST)\bin\libmsgc21.dll ..\eflib\win32_o.obj\ef.lib .
#        cp $(DIST)\bin\sm3240.dll .

install:: import $(TARGETS)

clobber::
        $(RM) *.mnw *.exe *.ilk *.obj *.pdb

#ifdef HAVE_PURIFY
javah.pure: $(OBJS) $(LIBRARIES)
	$(PURECCF) -o $@ $(OBJS) $(LIBRARIES)
#endif
