#!/bin/ksh
# fire off the series of Mailstone tests

# To test series, do: go_series -n


# Look for testname$test_form, first.  Override with: go_series -f <string>.
export test_form="_mail02"

export test_host="mail02"

# string appended to every description.  Override with: go_series -d <string>.
export desc_conf="12 CPUs"

# Extra arguments common to all tests.  Any other args go here.
# Note that arguments with embedded spaces won't work here.  
#   Instead use: go_series -- <args...>
export extra_args=""

# error limit to abort sequence
export error_limit=500

# time to allow the server to calm down after each run (seconds)
export sleep_time=120

# who to mail results to
#export mail_list="me@example.com,you@example.com"
export mail_list=""

# Get all the helper functions
. test_utils.ksh

### This is where the series of tests is defined

# clean and re-start server
if [[ $only_show_it -gt 0 ]] ; then
  echo  "Would run:" "$@"
  return 0
else
  # BUG: this never returns.  rsh never returns
  #   individual commands in clean work fine, but fail as a whole
  rsh -n $test_host /bin/ksh /iplanet/bin/clean$test_form &
  sleep 300 && kill -9 $!
  wait
fi

# check our setup
run timesync

###echo "DEBUG exit" && exit 0

run_test popdel 'Create mailboxes (random order)' -t 60m maxblocks=100000 "$@"
run_test allpop 'Create mailboxes (exhaustive)' "$@"

run_test popdel 'Empty checks: never used (1 of 3)' "$@"
run_test popdel 'Empty checks: never used (2 of 3)' "$@"
run_test popdel 'Empty checks: never used (3 of 3)' "$@"

run_test smtp10k-5-5k 'Deliver 5, 5k messages to 10k users' "$@"
sleep 200			# let queue drain (2000/(10 msg/sec))

run_test popsave10k 'Message downloads 5k from 10k users (1 of 3)' "$@"
run_test popsave10k 'Message downloads 5k from 10k users (2 of 3)' "$@"
run_test popsave10k 'Message downloads 5k from 10k users (3 of 3)' "$@"

run_test popsave 'Message downloads 5k (1 of 3)' "$@"
run_test popsave 'Message downloads 5k (2 of 3)' "$@"
run_test popsave 'Message downloads 5k (3 of 3)' "$@"

run_test popsmtp-throttle 'Combined load (1 of 3)' "$@"
run_test popsmtp-throttle 'Combined load (2 of 3)' "$@"
run_test popsmtp-throttle 'Combined load (3 of 3)' "$@"

run_test smtp100k 'SMTP delivery rate' "$@"

run_test popclean 'Message downloads/delete 5k ' "$@"

run_test popdel 'Empty checks (1 of 3)' "$@"
run_test popdel 'Empty checks (2 of 3)' "$@"
run_test popdel 'Empty checks (3 of 3)' "$@"

# e-mail the whole batch
[[ -n "$mail_list" ]] && \
	    mail_series "DotCom POP: `date`" "$mail_list"
