/* -*- Mode: IDL; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Calendar Code.
 *
 * The Initial Developer of the Original Code is
 * Michiel van Leeuwen <mvl@exedo.nl>.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsISupports.idl"

interface calIItemBase;
interface nsIInputStream;
interface nsIOutputStream;

[scriptable, uuid(efef8333-e995-4f45-bdf7-bfcabbd9793e)]
interface calIFileType : nsISupports
{
  /**
   * The default extension that should be associated 
   * with files of this type.
   */
  readonly attribute AString defaultExtension;

  /**
   * The extension filter to use in the filepicker's filter list.
   * Separate multiple extensions with semicolon and space. 
   * For example "*.html; *.htm".
   */
  readonly attribute AString extensionFilter;

  /**
   * The description to show to the user in the filter list.
   */
  readonly attribute AString description;
};

[scriptable, uuid(dbe262ca-d6c6-4691-8d46-e7f6bbe632ec)]
interface calIImporter : nsISupports
{
  void getFileTypes(out unsigned long aCount,
                    [retval, array, size_is(aCount)] out calIFileType aTypes);

  void importFromStream(in nsIInputStream aStream, 
                        out unsigned long aCount,
                        [retval, array, size_is(aCount)] out calIItemBase aItems);
};

[scriptable, uuid(18c75bb3-6309-4c33-903f-6055fec39d07)]
interface calIExporter : nsISupports
{
  void getFileTypes(out unsigned long aCount,
                    [retval, array, size_is(aCount)] out calIFileType aTypes);

  /**
   * Export the items into the stream
   */
  void exportToStream(in nsIOutputStream aStream,
                      in unsigned long aCount,
                      [array, size_is(aCount)] in calIItemBase aItems);
};
