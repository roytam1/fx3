/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SVG project.
 *
 * The Initial Developer of the Original Code is
 * Crocodile Clips Ltd.
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Scooter Morris <scootermorris@comcast.net> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"


%{C++
#include "nsColor.h"
%}

native nscolor(nscolor);

interface nsIDOMSVGMatrix;
interface nsISVGLinearGradient;
interface nsISVGRadialGradient;
interface nsIFrame;
interface nsISVGGeometrySource;

/**
 * \addtogroup rendering_backend_interfaces Rendering Backend Interfaces
 * @{
 */

/**
 * Describes the 'gradient' objects (either linear or a radial) to the
 * rendering backends.
 *
 * @nosubgrouping
 */
[uuid(62e79ab2-5bf9-4372-b397-7a942bc4c649)]
interface nsISVGGradient : nsISupports
{
  const unsigned long SVG_UNKNOWN_GRADIENT = 0;
  const unsigned long SVG_LINEAR_GRADIENT = 1;
  const unsigned long SVG_RADIAL_GRADIENT = 2;

  readonly attribute PRUint32 gradientType; 
  readonly attribute PRUint16 gradientUnits;
  readonly attribute PRUint16 spreadMethod;

  void GetStopCount(out PRUint32 aStopCount);
  void GetStopOffset(in PRInt32 aIndex, out float aOffset);
  void GetStopColor(in PRInt32 aIndex, out nscolor aStopColor);
  void GetStopOpacity(in PRInt32 aIndex, out float aStopOpacity);
  void GetNextGradient(out nsISVGGradient aNextGrad, in PRUint32 aType);
  void GetGradientTransform(out nsIDOMSVGMatrix retval,
                            in nsISVGGeometrySource aSource);
  /** @} */
};

[uuid(995ad9e6-6bb1-47c5-b402-fc93ce12f5e7)]
interface nsISVGLinearGradient : nsISupports
{
  readonly attribute float X1; 
  readonly attribute float X2; 
  readonly attribute float Y1; 
  readonly attribute float Y2; 

  /** @} */
};

[uuid(446435ff-6699-4b4d-85c1-09c18145f5ce)]
interface nsISVGRadialGradient : nsISupports
{
  readonly attribute float Cx; 
  readonly attribute float Cy; 
  readonly attribute float R; 
  readonly attribute float Fx; 
  readonly attribute float Fy; 
  
  /** @} */
};

/** @} */


