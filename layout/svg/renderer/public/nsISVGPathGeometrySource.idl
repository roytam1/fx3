/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SVG project.
 *
 * The Initial Developer of the Original Code is
 * Crocodile Clips Ltd.
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alex Fritze <alex.fritze@crocodile-clips.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISVGGeometrySource.idl"

interface nsISVGRendererPathBuilder;

/**
 * \addtogroup rendering_backend_interfaces Rendering Backend Interfaces
 * @{
 */

/**
 * Describes a 'path geometry' object in the SVG rendering backend,
 * i.e. a graphical object composed of lines, Bezier curves and
 * elliptical arcs, that can be stroked and filled. The rendering
 * backend maintains an object implementing this interface for each
 * rendering engine-native path geometry object.
 *
 * An engine-native path geometry object will be informed of changes
 * in a path geometry's description with a call to its
 * nsISVGRendererPathGeometry::update() method with an OR-ed
 * combination of the UPDATEMASK_* constants defined in this interface
 * (and its base-interface).
 *
 * @nosubgrouping
 */
[scriptable, uuid(73c9350e-6b0b-4458-aa24-aa5333476eff)]
interface nsISVGPathGeometrySource : nsISVGGeometrySource
{

  /**
   * @name Path description
   * @{
   */
  
  /**
   * Write a description of the path to the 'pathBuilder'.
   *
   * @param pathBuilder Object to write path description to.
   */
  void constructPath(in nsISVGRendererPathBuilder pathBuilder);
  
  const unsigned long UPDATEMASK_PATH         = 0x00008000;
  
  /** @} */

  /**
   * @name Hittest mode of operation
   * @{
   */
  
  const unsigned short HITTEST_MASK_FILL   = 0x0001;
  const unsigned short HITTEST_MASK_STROKE = 0x0002;

  /**
   * Determines mode of operation expected of the
   * nsISVGRendererPathGeometry::containsPoint() method.  A
   * combination of the 'HITTEST_MASK_*' constants defined in this
   * interface.
   */
  readonly attribute unsigned short hittestMask;
  
  const unsigned long UPDATEMASK_HITTEST_MASK = 0x00010000;
  /** @} */

  /**
   * @name Shape rendering hints
   * @{
   */

  const unsigned short SHAPE_RENDERING_AUTO               = 0;
  const unsigned short SHAPE_RENDERING_OPTIMIZESPEED      = 1;
  const unsigned short SHAPE_RENDERING_CRISPEDGES         = 2;
  const unsigned short SHAPE_RENDERING_GEOMETRICPRECISION = 3;

  readonly attribute unsigned short shapeRendering;
  /** @} */
};

/** @} */
