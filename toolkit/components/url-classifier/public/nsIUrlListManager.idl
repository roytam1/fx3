/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

/**
 * Interface for a class that manages updates of multiple nsIUrlClassifierTables.
 */

interface nsIFile;

[scriptable, uuid(e1a80418-1bf9-4bd7-a40d-94d549c24955)]
interface nsIUrlListManager : nsISupports
{
    /**
     * Set the directory to read/write tables to.
     */
    void setAppDir(in nsIFile appDir);

    /**
     * Add a table to the list of tables we are managing.  The name is a
     * string of the format provider_name-semantic_type-table_type.  For
     * example, goog-white-enchash or goog-black-url.
     */
    boolean registerTable(in string tableName,
                          in boolean requireMac);

    /**
     * For each table that is enabled, check for updates during
     * during the scheduled interval.
     */
    void startUpdateChecker();

    /**
     * Stop checking for all updates.
     */
    void stopUpdateChecker();

    /**
     * Lookup a key in a table.  Should not raise exceptions.
     */
    boolean safeLookup(in string tableName, in string key);

    /**
     * Insert a key in a table.  Should not raise exceptions.
     */
    boolean safeInsert(in string tableName, in string key, in string value);

    /**
     * Remove a key from a table.  Should not raise exceptions.
     */
    boolean safeErase(in string tableName, in string key);
};
