/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Ben Goodger              <ben@netscape.com>
 *   David Hyatt              <hyatt@mozilla.org>
 *   Vladimir Vukicevic       <vladimir@pobox.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/**
 * The Browser Bookmarks service
 */

#include "nsISupports.idl"

interface nsIArray;
interface nsIRDFResource;
interface nsITransactionManager;

[scriptable, uuid(ccc48346-429d-4931-94dc-beb1afcea292)]
interface nsIBookmarksService : nsISupports
{
    const unsigned long BOOKMARK_DEFAULT_TYPE   = 0;
    const unsigned long BOOKMARK_SEARCH_TYPE    = 1;
    const unsigned long BOOKMARK_FIND_TYPE      = 2;

    boolean readBookmarks();
    boolean isBookmarkedResource(in nsIRDFResource aSource);

    nsIRDFResource createFolder(in wstring aName);
    nsIRDFResource createFolderInContainer(in wstring aName, in nsIRDFResource aParentFolder, 
                                           in long aIndex);

    nsIRDFResource createBookmark(in wstring aName,
                                  in wstring aURL,
                                  in wstring aShortcutURL,
                                  in wstring aDescription,
                                  in wstring aDocCharSet,
                                  in wstring aPostData);
    nsIRDFResource createBookmarkInContainer(in wstring aName,
                                             in wstring aURL,
                                             in wstring aShortcutURL,
                                             in wstring aDescription,
                                             in wstring aDocCharSet,
                                             in wstring aPostData,
                                             in nsIRDFResource aFolder,
                                             in long aIndex);

    nsIRDFResource createLivemark(in wstring aName,
                                  in wstring aURL,
                                  in wstring aRSSURL,
                                  in wstring aDescription);
    nsIRDFResource createLivemarkInContainer(in wstring aName,
                                             in wstring aURL,
                                             in wstring aRSSURL,
                                             in wstring aDescription,
                                             in nsIRDFResource aFolder,
                                             in long aIndex);

    nsIRDFResource createSeparator();

    nsIRDFResource cloneResource(in nsIRDFResource aSource);
    nsIRDFResource getParent(in nsIRDFResource aSource);
    nsIArray getParentChain(in nsIRDFResource aSource);

    nsIRDFResource getBookmarksToolbarFolder();
    void setBookmarksToolbarFolder(in nsIRDFResource aSource);

    void updateBookmarkIcon(in string aURL, in string aIconMIMEtype,
                            [const,array,size_is(aIconDataLen)] in octet aIconData,
                            in unsigned long aIconDataLen);
    void removeBookmarkIcon(in string aURL);

    void updateLastVisitedDate(in string aURL, in wstring docCharset);

    AString getLastCharset(in AUTF8String aURL); 
    
    string resolveKeyword(in wstring aName, out wstring aPostData);

    readonly attribute nsITransactionManager transactionManager;

    //XXXpch: to be removed.
    void addBookmarkImmediately(in wstring aURI, in wstring aTitle, in long bmType, in wstring docCharset);
    boolean isBookmarked(in string aURL);

};

%{C++

// {E638D760-8687-11d2-B530-000000000000}
#define NS_BOOKMARKS_SERVICE_CID \
{ 0xe638d760, 0x8687, 0x11d2, { 0xb5, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 } }

#define NS_BOOKMARKS_SERVICE_CONTRACTID \
    "@mozilla.org/browser/bookmarks-service;1"

#define NS_BOOKMARKS_DATASOURCE_CONTRACTID \
    "@mozilla.org/rdf/datasource;1?name=bookmarks"

%}
