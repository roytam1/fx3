/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
* Version: MPL 1.1/GPL 2.0/LGPL 2.1
*
* The contents of this file are subject to the Mozilla Public License Version
* 1.1 (the "License"); you may not use this file except in compliance with
* the License. You may obtain a copy of the License at
* http://www.mozilla.org/MPL/
*
* Software distributed under the License is distributed on an "AS IS" basis,
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
* for the specific language governing rights and limitations under the
* License.
*
* The Original Code is the Feed Result Service.
*
* The Initial Developer of the Original Code is Google Inc.
* Portions created by the Initial Developer are Copyright (C) 2006
* the Initial Developer. All Rights Reserved.
*
* Contributor(s):
*   Ben Goodger <beng@google.com>
*   Robert Sayre <sayrer@gmail.com>
*
* Alternatively, the contents of this file may be used under the terms of
* either the GNU General Public License Version 2 or later (the "GPL"), or
* the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
* in which case the provisions of the GPL or the LGPL are applicable instead
* of those above. If you wish to allow use of your version of this file only
* under the terms of either the GPL or the LGPL, and not to allow others to
* use your version of this file under the terms of the MPL, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the GPL or the LGPL. If you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the MPL, the GPL or the LGPL.
*
* ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
interface nsIURI;
interface nsIFeedResult;

/**
 * nsIFeedResultService provides a globally-accessible object for retreiving
 * the results of feed processing.
 */
[scriptable, uuid(76d751fa-ad21-4a21-bc0b-405abbaf3fa1)]
interface nsIFeedResultService : nsISupports
{
  /**
  * Registers a Feed Result object with a globally accessible service
  * so that it can be accessed by a singleton method outside the usual
  * flow of control in document loading.
  *
  * @param   feedResult
  *          An object implementing nsIFeedResult representing the feed.
  */
  void addFeedResult(in nsIFeedResult feedResult);

  /**
  * Gets a Feed Handler object registered using addFeedResult.
  * @param   uri
  *          The URI of the feed a handler is being requested for
  */
  nsIFeedResult getFeedResult(in nsIURI uri);

  /**
  * Unregisters a Feed Handler object registered using addFeedResult.
  * @param   uri
  *          The feed URI the handler was registered under.
  */
  void removeFeedResult(in nsIURI uri);


  attribute boolean attached;

};
