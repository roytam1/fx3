#!gmake
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****


IGNORE_MANIFEST=1

DEPTH	= ..\..\..
  
LIBRARY_SUFFIX=$(MOZ_BITS)

!ifndef MAKE_OBJ_TYPE
MAKE_OBJ_TYPE=DLL
!else
!ifdef MAKE_SPF
OBJS= $(OBJS) .\$(OBJDIR)\spf2ldif.obj \
              .\$(OBJDIR)\hashtable.obj
!else
OBJS= $(OBJS) .\$(OBJDIR)\test.obj
!endif
# LLIBS=$(LIBNSPR) 
# !endif
!ifndef	MOZ_DEBUG
LLIBS=$(LIBNSPR)
!else
LLIBS=$(LIBNSPR)
!endif
!endif

TESTPROG = .\$(OBJDIR)\test.exe
SPFPROG = .\$(OBJDIR)\spf2ldif.exe

MODULE=rdf 
LIBRARY_NAME=rdf 
REQUIRES=nspr dbm java js htmldlgs util img layer pref ldap parse

C_OBJS=.\$(OBJDIR)\vocab.obj \
       .\$(OBJDIR)\mcf.obj \
       .\$(OBJDIR)\remstore.obj \
       .\$(OBJDIR)\utils.obj \
       .\$(OBJDIR)\rdfparse.obj \
       .\$(OBJDIR)\ldap2rdf.obj \
       .\$(OBJDIR)\mcff2mcf.obj \
       .\$(OBJDIR)\bmk2mcf.obj \
       .\$(OBJDIR)\glue.obj \
       .\$(OBJDIR)\rdfht.obj \
!ifdef SMART_MAIL
       .\$(OBJDIR)\pm2rdf.obj \
!endif
       .\$(OBJDIR)\jsec2rdf.obj \
       $(NULL)

       
!ifdef RDF_STANDALONE
# evil hack since no xp library on windows.
EXTRA_OBJS =  \
       $(DEPTH)\cmd\winfe\mkfiles32\x86dbg\allxpstr.obj \
       $(DEPTH)\cmd\winfe\mkfiles32\x86dbg\xp_str.obj \
       $(DEPTH)\cmd\winfe\mkfiles32\x86dbg\xpassert.obj
!else
C_OBJS = $(C_OBJS) \
       .\$(OBJDIR)\ht.obj \
       .\$(OBJDIR)\find2rdf.obj \
       .\$(OBJDIR)\fs2rdf.obj \
       .\$(OBJDIR)\hist2rdf.obj \
       .\$(OBJDIR)\es2mcf.obj \
       .\$(OBJDIR)\columns.obj \
       .\$(OBJDIR)\nlcstore.obj
!endif
       
!if "$(MOZ_BITS)" != "16"
LINCS=-I$(XPDIST)\public\nspr -I$(XPDIST)\public\dbm \
    -I$(XPDIST)\public\java -I$(XPDIST)\public\js \
    -I$(XPDIST)\public\htmldlgs -I$(XPDIST)\public\util \
    -I$(XPDIST)\public\img -I$(XPDIST)\public\layer \
    -I$(XPDIST)\public\ldap \
!ifdef NU_CACHE
    -I$(XPDIST)\public\cache \
!endif
    -I$(XPDIST)\public\pref \
    -I$(XPDIST)\public\network \
    -I$(XPDIST)\public\parse

     
!endif


include <$(DEPTH)\config\rules.mak>

!ifdef RDF_STANDALONE
CFLAGS = $(CFLAGS) -UMOZILLA_CLIENT
!endif

!if "$(MOZ_BITS)" == "32"
LINCS= $(LINCS) -I$(PUBLIC)\rdf
!endif

libs:: $(LIBRARY)
    $(MAKE_INSTALL) $(LIBRARY) $(DIST)\lib


test: 
	echo make test
	nmake /nologo -f makefile.win MAKE_OBJ_TYPE=EXE $(TESTPROG)
	
spf2ldif:
	echo make spf2ldif
	nmake /nologo -f makefile.win MAKE_OBJ_TYPE=EXE MAKE_SPF=1 $(SPFPROG)
	
$(TESTPROG): $(OBJS)
   $(LD) /NOLOGO /OUT:$@ $(LFLAGS) $(OBJS) $(EXTRA_OBJS) $(LLIBS) $(OS_LIBS)
	
$(SPFPROG) : $(OBJS)
   $(LD) /NOLOGO /OUT:$@ $(LFLAGS) $(OBJS) $(EXTRA_OBJS) $(LLIBS) $(OS_LIBS)


JNI_GEN_DIR = _jni

!ifdef JNI_GEN

export:: $(JNI_GEN)

$(JNI_GEN):: display_jni_header_msg
	!$(JAVAH) -jni -d $(JNI_GEN_DIR) $@

LINCS = $(LINCS) -I$(JNI_GEN_DIR)

display_jni_header_msg:
	echo +++ make: Generating JNI header files...
	
!endif






