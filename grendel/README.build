Building Grendel:

1. Make sure you have the required (external) packages (see README.libs).  
2. Copy the jars to the extlib directory. With OROMatcher, you'll have to create the jar yourself
   from the binaries in the OROMatcher distribution. To do this, unpack the OROMatcher distribution
   and cd to the top directory, then:
	jar cvf OROMatcher.jar com
   Copy the resulting OROMatcher.jar to the extlib directory in here.

   If you want, you can download the Grendel Library Pack (http://mirrors.trfenv.com/rlk/grendel-jar-pack.zip)
   to get a copy of all of the libraries needed to be put in this directory.

3. Type 'ant build' and go get a cup of coffee or something. Grendel takes a little while to build.
5. Binaries and application resources will now be in dist.
6. Go the the dist directory by typing 'cd dist' and then type 'java grendel.Main' and test that Grendel
   works. If everything built successfully, it should.
7. If you want to make an executable jar to package up all the application's classes (minus the
   external libraries), type 'ant jar'. Once you've done that, you can type:
	java -jar Grendel.jar 
   and it should run Grendel for you.
8. To clean out the dist directory of all build products, type 'ant clean'.

NOTE TO MAC USERS:
We are no longer supporting JDK 1.4.x, so Grendel will not run on MacOS 10.2 or earlier. You'll have
to upgrade to Mac OS 10.3 if you want to run Grendel.
 
Happy haquing!

--The Grendel Team