# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Minimo.
#
# The Initial Developer of the Original Code is
# Doug Turner <dougt@meer.net>.
# Portions created by the Initial Developer are Copyright (C) 2005
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****


DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MOZILLA_INTERNAL_API = 1


ifdef WINCE
DIRS        = wince
endif

PROGRAM		= minimo$(BIN_SUFFIX)

MODULE		= minimo

REQUIRES	= xpcom					 \
		      browser                \
		      history                \
		      appshell				 \
		      string				 \
		      embed_base			 \
		      webbrwsr				 \
		      webshell				 \
		      windowwatcher			 \
		      profile				 \
		      necko					 \
		      docshell				 \
		      dom					 \
		      widget				 \
		      uriloader				 \
		      shistory				 \
		      webbrowserpersist		 \
		      gfx					 \
		      layout				 \
		      content				 \
		      profdirserviceprovider \
		      pref					 \
		      pipnss                 \
			  pipboot                \
		      intl                   \
		      embedcomponents		 \
		      appcomps				 \
		      phone					 \
		      js					 \
			  imglib2                \
             toolkitcomps           \
		      $(NULL)

CPPSRCS	    = Minimo.cpp		  \
		      WindowCreator.cpp	  \
		      SplashScreen.cpp	  \
		      nsConsoleWriter.cpp \
	          $(NULL)


# this should move into the toolkit!
LOCAL_INCLUDES	= -I$(srcdir) -I$(topsrcdir)/xpfe/browser/src/
CPPSRCS    += nsBrowserStatusFilter.cpp nsBrowserInstance.cpp

ifdef WINCE
RCINCLUDE  = wince/SplashScreen.rc
endif

LIBS =

ifndef WINCE
LIBS	  += $(NSPR_LIBS)
endif

ifdef MOZ_ENABLE_GTK2
LIBS	 += $(XLDFLAGS)	 \
		 	$(XLIBS)	 \
			$(NULL)
endif

ifdef MOZ_ENABLE_XFT
LIBS     += $(MOZ_XFT_LIBS) \
	        $(NULL)
endif

include $(topsrcdir)/config/config.mk

ifdef WINCE
LOCAL_INCLUDES	+= -I$(srcdir)/wince
OS_LIBS += $(call EXPAND_LIBNAME, aygshell cellcore uuid ole32 oleaut32 ws2 Ccrtrtti)
endif


ifdef BUILD_STATIC_LIBS

ifdef WINCE
FINAL_PLATFORM=wince
else
ifeq ($(OS_ARCH),WINNT)
FINAL_PLATFORM=winnt
else
FINAL_PLATFORM=linux
endif
endif


FINAL_LINK_COMPS=$(topsrcdir)/minimo/base/$(FINAL_PLATFORM)/minimo-link-comps
FINAL_LINK_COMP_NAMES=$(topsrcdir)/minimo/base/$(FINAL_PLATFORM)/minimo-link-names
FINAL_LINK_LIBS=$(topsrcdir)/minimo/base/$(FINAL_PLATFORM)/minimo-link-libs

include $(topsrcdir)/config/static-config.mk

EXTRA_DEPS     += $(STATIC_EXTRA_DEPS)
EXTRA_DSO_LIBS += $(STATIC_EXTRA_DSO_LIBS)
EXTRA_LIBS     += $(EXTRA_DSO_LIBS) $(STATIC_EXTRA_LIBS)
DEFINES        += $(STATIC_DEFINES)
CPPSRCS        += $(STATIC_CPPSRCS)

endif # BUILD_STATIC_LIBS


include $(topsrcdir)/config/rules.mk

ifdef MOZ_ENABLE_GTK2
CXXFLAGS	+= $(MOZ_GTK_CFLAGS) $(MOZ_GTK2_CFLAGS)
EXTRA_LIBS	+= $(TK_LIBS)
endif

ifdef BUILD_STATIC_LIBS
include $(topsrcdir)/config/static-rules.mk
endif


# MSVC '-Gy' cc flag and '/OPT:REF' linker flag cause JS_GetArgument and
# JS_GetLocalVariable to be folded to the same address by the linker, 
# leading to a crash on startup. See bug 151066. So, in optimized builds,
# add the /OPT:NOICF flag, which turns off 'identical COMDAT folding'.
#
# N.B.: 'identical COMDAT folding' that folds functions whose addresses
# are taken violates the ISO C and C++ standards.
# (same as in mozilla/js/src/Makefile.in)
ifdef WINCE
LDFLAGS         += -OPT:NOICF
endif

export::
	$(NSINSTALL) $(topsrcdir)/xpfe/browser/src/nsBrowserStatusFilter.cpp .
	$(NSINSTALL) $(topsrcdir)/xpfe/browser/src/nsBrowserInstance.cpp .


GARBAGE += nsBrowserStatusFilter.cpp nsBrowserInstance.cpp

ifdef WINCE
package::
	bash $(srcdir)/../config/wince_package.sh         $(MOZ_BUILD_ROOT) $(srcdir)

installer_only::
	bash $(srcdir)/../config/wince_buildinstaller.sh  $(MOZ_BUILD_ROOT) $(srcdir)

installer::
	bash $(srcdir)/../config/wince_package.sh         $(MOZ_BUILD_ROOT) $(srcdir)
	bash $(srcdir)/../config/wince_buildinstaller.sh  $(MOZ_BUILD_ROOT) $(srcdir)


else
package::
	bash $(srcdir)/../config/linux_package.sh  $(MOZ_BUILD_ROOT) $(srcdir)

installer::
	bash $(srcdir)/../config/linux_package.sh  $(MOZ_BUILD_ROOT) $(srcdir)
endif

