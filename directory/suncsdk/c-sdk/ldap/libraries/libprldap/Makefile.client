# 
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#  
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#  
# The Original Code is Mozilla Communicator client code, released
# March 31, 1998.
# 
# The Initial Developer of the Original Code is Netscape
# Communications Corporation. Portions created by Netscape are
# Copyright (C) 1998-1999 Netscape Communications Corporation. All
# Rights Reserved.
# 
# Contributor(s): 
#

DEPTH		= ../../../../..
NS_DEPTH	= ../../../..
LDAP_SRC	= ../..
NSCP_DISTDIR    = ../../../../../dist
NSPR_TREE = ../../..
MOD_DEPTH = ../../..

include $(NSPR_TREE)/config/rules.mk
include		../../../build.mk

SRCS		= ldappr-dns.c \
		  ldappr-error.c \
		  ldappr-io.c \
		  ldappr-public.c \
		  ldappr-threads.c

ifeq ($(OS_ARCH), WINNT)
REALOBJS        = $(SRCS:.c=.obj)
else
REALOBJS	= $(SRCS:.c=.o)
endif

PROBJDEST 	= $(OBJDIR_NAME)
OBJS		= $(addprefix $(PROBJDEST)/, $(REALOBJS))

ifeq ($(OS_ARCH), WINNT)
SDK_RES = $(addprefix $(PROBJDEST)/, libprldap.res) 
EXTRA_OBJS = $(SDK_RES) 
endif
 
DISTHDIR	= $(NSCP_DISTDIR)/public/ldap
HDIR		= $(LDAP_SRC)/include

ifeq ($(OS_ARCH), WINNT)
LIBPRLDAP	= $(addprefix $(PROBJDEST)/, \
			nsldappr32v$(PRLDAPVERS).$(DLL_SUFFIX))
DLLPRLDAP	= $(addprefix $(PROBJDEST)/, \
			nsldappr32v$(PRLDAPVERS).$(LIB_SUFFIX))
else
LIBPRLDAP	= $(addprefix $(PROBJDEST)/, lib$(PRLDAP_LIBNAME).$(DLL_SUFFIX))
DLLPRLDAP	= $(addprefix $(PROBJDEST)/, lib$(PRLDAP_LIBNAME).$(LIB_SUFFIX))
endif

INSTALLDIR      = $(DEPTH)/dist/$(OBJDIR_NAME)

LOCAL_INCLUDES  = -I$(PUBLIC)/nspr
INCLUDES	+= -I$(DISTHDIR) -I$(HDIR) -I$(INSTALLDIR)/include \
		   -I../../../../../dist/include
DEFINES		+= $(DEFS)

PLATFORMCFLAGS	= -DUSE_WAITPID -DNEEDPROTOS
PLATFORMLIBS	=
THREADS		=
THREADSLIB	=

#
# shared library symbol export definitions
#
ifeq ($(USE_DLL_EXPORTS_FILE), 1)
ifeq ($(OS_ARCH), WINNT)
GENEXPORTS=cmd /c  $(PERL) $(LDAP_SRC)/build/genexports.pl
else
GENEXPORTS=$(PERL) $(LDAP_SRC)/build/genexports.pl
endif

# variable definitions for exported symbols
ifeq ($(OS_ARCH), WINNT)
        PRLDAP_EXPORT_DEFS=../msdos/winsock/nsldappr32.def
else
        PRLDAP_EXPORT_DEFS= $(PROBJDEST)/libprldap.exp
endif

PRLDAP_EXPORT_FLAGS=$(addprefix $(DLLEXPORTS_PREFIX), $(PRLDAP_EXPORT_DEFS))

GENEXPARGS=$(BUILD_DEBUG) $(PRLDAPVERS_SUFFIX) $(PRLDAPVERS)
endif # USE_DLL_EXPORTS_FILE

ifeq ($(OS_ARCH), SunOS)
EXTRA_LIBS = -L$(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib -l$(LDAP_LIBNAME)
EXTRA_LIBS += -L$(NSCP_DISTDIR)/lib $(DYNAMICNSPR)
EXTRA_LIBS += -lposix4 -lsocket -lnsl -ldl -lresolv -lgen
endif

ifeq ($(OS_ARCH), Linux)
EXTRA_LIBS += -L$(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib -l$(LDAP_LIBNAME)
EXTRA_LIBS += -L$(NSCP_DISTDIR)/lib $(DYNAMICNSPR)
EXTRA_LIBS += -lresolv -lc 
endif

ifeq ($(OS_ARCH), WINNT)
EXTRA_LIBS =wsock32.lib kernel32.lib user32.lib gdi32.lib winspool.lib \
            comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib \
            rpcrt4.lib uuid.lib odbc32.lib odbccp32.lib winmm.lib
EXTRA_LIBS += $(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib/$(LDAP_LIBNAME).lib
EXTRA_LIBS += $(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib/$(PLC_BASENAME).lib
EXTRA_LIBS += $(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib/$(PLDS_BASENAME).lib
EXTRA_LIBS += $(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib/$(NSPR_BASENAME).lib
endif

ifeq ($(OS_ARCH), OSF1)
EXTRA_LIBS = -L$(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib -l$(LDAP_LIBNAME)
EXTRA_LIBS += -L$(NSCP_DISTDIR)/lib $(DYNAMICNSPR)
EXTRA_LIBS += -lcxx -lpthread -lrt -lmach -lexc
endif

ifeq ($(OS_ARCH), AIX)
EXTRA_LIBS = -L$(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib -l$(LDAP_LIBNAME)
EXTRA_LIBS += -L$(NSCP_DISTDIR)/lib $(DYNAMICNSPR)
EXTRA_LIBS += -ldl -brtl -lpthreads -lc_r -lm
endif

OBJDEST = $(OBJDIR_NAME)

ifneq ($(OS_ARCH), WINNT)
	ifeq ($(USE_64), 1)
		RPATHFLAG = '$$'ORIGIN:/opt/sun/private/lib/64
	else
		RPATHFLAG = '$$'ORIGIN:/opt/sun/private/lib
	endif
	ifeq ($(OS_ARCH), SunOS)
		RPATHFLAG_PREFIX = -R
		ifeq ($(USE_64), 1)
			RPATHFLAG = '$$'ORIGIN/secv1/64:'$$'ORIGIN/sasl2/64:/usr/lib/mps/secv1/64:/usr/lib/mps/sasl2/64:'$$'ORIGIN:/usr/lib/mps/64
		else
			RPATHFLAG = '$$'ORIGIN/secv1:'$$'ORIGIN/sasl2:/usr/lib/mps/secv1:/usr/lib/mps/sasl2:'$$'ORIGIN:/usr/lib/mps
		endif
	endif
	ifeq ($(OS_ARCH), Linux)
		RPATHFLAG_PREFIX = -R
		ifeq ($(USE_64), 1)
			RPATHFLAG = '$$'ORIGIN:/opt/sun/private/lib64
		else
			RPATHFLAG = '$$'ORIGIN:/opt/sun/private/lib
		endif
	endif
	ifeq ($(OS_ARCH), HP-UX)
		RPATHFLAG_PREFIX = +s +b
		ifeq ($(USE_64), 1)
			RPATHFLAG = '$$'ORIGIN:/opt/sun/private/lib/64
		else
			RPATHFLAG = '$$'ORIGIN:/opt/sun/private/lib
		endif
	endif
	ifeq ($(OS_ARCH), AIX)
		RPATHFLAG_PREFIX = -blibpath:
		ifeq ($(USE_64), 1)
			RPATHFLAG = .:/opt/sun/private/lib/64
		else
			RPATHFLAG = .:/opt/sun/private/lib
		endif
	endif
endif

###########################################################################

# recursive gmake rule to create exported symbols file
$(PROBJDEST)/libprldap.exp:: libprldap.ex
ifeq ($(OS_ARCH), WINNT)
	$(GENEXPORTS) Win32 Standard $< $(GENEXPARGS) > $@
else
	$(GENEXPORTS) $(OS_ARCH) Standard $< $(GENEXPARGS) > $@
endif
	
$(SDK_RES): libprldap.rc
	$(RSC) -fo $(SDK_RES) -d LDAP_LIBNAME=$(PRLDAP_LIBNAME) \
		-d YY=`date +%y` -d MMDD=`date +%m%d` -d HH=`date +%H` \
		-d MMSS=`date +%M%S` -d DEBUG=$(DEBUG) \
		-i ../../../../../dist/public/ldap $<  

all::    $(OBJDEST) $(LIBDIR) $(OBJS) $(LIBPRLDAP) $(DLLPRLDAP)

$(LIBDIR):
	$(MKDIR) $(LIBDIR)

$(LIBPRLDAP): $(OBJS) $(SDK_RES) $(LIBDIR) $(PRLDAP_EXPORT_DEFS)
	@echo ======= making $(LIBPRLDAP)
ifdef SO_FILES_TO_REMOVE
	-$(RM) $(SO_FILES_TO_REMOVE)
endif
	$(LINK_DLL) $(DSO_LDOPTS) $(PRLDAP_EXPORT_FLAGS) $(EXTRA_LIBS) $(EXTRA_OBJS)

$(DLLPRLDAP): $(OBJS) $(LIBDIR) $(PRLDAP_EXPORT_DEFS)
	@echo ======= making $(DLLPRLDAP)
ifdef SO_FILES_TO_REMOVE
	-$(RM) $(SO_FILES_TO_REMOVE)
endif

ifeq ($(OS_ARCH), Linux)
	$(LINK_LIB) $(PRLDAP_EXPORT_FLAGS)
else
ifeq ($(OS_ARCH), AIX)
	$(LINK_LIB)
else
	$(LINK_LIB) $(DSO_LDOPTS) $(PRLDAP_EXPORT_FLAGS) $(EXTRA_LIBS)
endif
endif

veryclean:: clean

clean::
	$(RM) $(OBJS) $(LIBPRLDAP) $(DLLPRLDAP)
	$(RM) -r $(PROBJDEST)

$(OBJDEST):
	$(MKDIR) $(OBJDEST)

install:: $(LIBPRLDAP) $(DLLPRLDAP)	
ifeq ($(OS_ARCH), WINNT)
	$(INSTALL) -m 555 $(LIBPRLDAP) $(INSTALLDIR)/lib
	$(INSTALL) -m 555 $(DLLPRLDAP) $(INSTALLDIR)/lib
endif
ifdef MKSHLIB
	$(INSTALL) -m 555 $(LIBPRLDAP) $(INSTALLDIR)/lib
	$(INSTALL) -m 555 $(DLLPRLDAP) $(INSTALLDIR)/lib
endif
